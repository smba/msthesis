
@inproceedings{foo_mining_2010,
	title = {Mining performance regression testing repositories for automated performance analysis},
	url = {http://ieeexplore.ieee.org/abstract/document/5562942/},
	urldate = {2017-07-19},
	booktitle = {Quality {Software} ({QSIC}), 2010 10th {International} {Conference} on},
	publisher = {IEEE},
	author = {Foo, King Chun and Jiang, Zhen Ming and Adams, Bram and Hassan, Ahmed E. and Zou, Ying and Flora, Parminder},
	year = {2010},
	pages = {32--41},
	annote = {Foo et al. outline existing problems faced when assessing a software sytem's performance manually. Manual analysis requires a high level of domain-knowledge and understanding of softwarre metrics used in order to detect performance regressions by identifying deviations from anticipated behaviour or performance. They propose an automated approach based on performance history repositories and regression tests. For a given test case history, metrics are measured and ML learns a set of signatures best describing correlations between metrics. Consequently, any metric changing significantly or deviating from previously learned signatures may indicate defects related to performance regressions.
 },
	file = {2010-Mining_performance_regression_testing_repositories_for_automated_performance_analysis.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/5ATFJ6EU/2010-Mining_performance_regression_testing_repositories_for_automated_performance_analysis.pdf:application/pdf}
}

@inproceedings{siegmund_performance-influence_2015,
	title = {Performance-influence models for highly configurable systems},
	isbn = {978-1-4503-3675-8},
	url = {http://dl.acm.org/citation.cfm?doid=2786805.2786845},
	doi = {10.1145/2786805.2786845},
	language = {en},
	urldate = {2017-07-19},
	publisher = {ACM Press},
	author = {Siegmund, Norbert and Grebhahn, Alexander and Apel, Sven and Kästner, Christian},
	year = {2015},
	pages = {284--294},
	file = {2015-Performance-influence_models_for_highly_configurable_systems.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/5CICJXK6/2015-Performance-influence_models_for_highly_configurable_systems.pdf:application/pdf}
}

@article{lesenich_balancing_2015,
	title = {Balancing precision and performance in structured merge},
	volume = {22},
	issn = {0928-8910, 1573-7535},
	url = {http://link.springer.com/10.1007/s10515-014-0151-5},
	doi = {10.1007/s10515-014-0151-5},
	language = {en},
	number = {3},
	urldate = {2017-07-19},
	journal = {Automated Software Engineering},
	author = {Leßenich, Olaf and Apel, Sven and Lengauer, Christian},
	month = sep,
	year = {2015},
	pages = {367--397},
	file = {10.1007%2Fs10515-014-0151-5.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/2RQMHEKE/10.1007%2Fs10515-014-0151-5.pdf:application/pdf}
}

@inproceedings{yilmaz_main_2005,
	title = {Main effects screening: a distributed continuous quality assurance process for monitoring performance degradation in evolving software systems},
	shorttitle = {Main effects screening},
	url = {http://dl.acm.org/citation.cfm?id=1062515},
	abstract = {Developers of highly configurable performance-intensive soft-
ware systems often use a type of in-house performance-oriented
“regression testing” to ensure that their modifications have not
adversely affected their software’s performance across its large
configuration space. Unfortunately, time and resource constraints
often limit developers to in-house testing of a small number of con-
figurations and unreliable extrapolation from these results to the
entire configuration space, which allows many performance bot-
tlenecks and sources of QoS degradation to escape detection until
systems are fielded. To improve performance assessment of evolv-
ing systems across large configuration spaces, we have developed
a distributed continuous quality assurance (DCQA) process called
main effects screening that uses in-the-field resources to execute
formally designed experiments to help reduce the configuration
space, thereby allowing developers to perform more targeted in-
house QA. We have evaluated this process via several feasibility
studies on several large, widely-used performance-intensive soft-
ware systems. Our results indicate that main effects screening can
detect key sources of performance degradation in large-scale sys-
tems with significantly less effort than conventional techniques.},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 27th international conference on {Software} engineering},
	publisher = {ACM},
	author = {Yilmaz, Cemal and Krishna, Arvind S. and Memon, Atif and Porter, Adam and Schmidt, Douglas C. and Gokhale, Aniruddha and Natarajan, Balachandran},
	year = {2005},
	pages = {293--302},
	file = {2005-Main_effects_screening_a_distributed_continuous_quality_assurance_process_for_monitoring_performance_degradation_in.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/8U62FNZU/2005-Main_effects_screening_a_distributed_continuous_quality_assurance_process_for_monitoring_performance_degradation_in.pdf:application/pdf}
}

@inproceedings{woodside_future_2007,
	title = {The future of software performance engineering},
	url = {http://ieeexplore.ieee.org/abstract/document/4221619/},
	urldate = {2017-07-19},
	booktitle = {Future of {Software} {Engineering}, 2007. {FOSE}'07},
	publisher = {IEEE},
	author = {Woodside, Murray and Franks, Greg and Petriu, Dorina C.},
	year = {2007},
	pages = {171--187},
	annote = {Woolside et al. provide an overview about the current state of software performance engineering (SPE) including model-based and measure-based approaches. Both approaches are applicable for different scenarios with model-based approaches being favorable in early stages of development. In contrast, measure-based approaches are applicable with a given system under test. The authors argue that both approaches in order to improve feasability need to converge, e.g., a performance model can be validated with empirical results.Both approaches are presented in detail covering recent technical developments as well as integration of SPE processes and challenges into agile development.},
	file = {2007-The_future_of_software_performance_engineering (1).pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/NUKEK3KM/2007-The_future_of_software_performance_engineering (1).pdf:application/pdf}
}

@article{pan_toward_2009,
	title = {Toward an understanding of bug fix patterns},
	volume = {14},
	issn = {1382-3256, 1573-7616},
	url = {http://link.springer.com/10.1007/s10664-008-9077-5},
	doi = {10.1007/s10664-008-9077-5},
	language = {en},
	number = {3},
	urldate = {2017-07-19},
	journal = {Empirical Software Engineering},
	author = {Pan, Kai and Kim, Sunghun and Whitehead, E. James},
	month = jun,
	year = {2009},
	pages = {286--315},
	file = {2009-Toward_an_understanding_of_bug_fix_patterns.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/PESKGQSP/2009-Toward_an_understanding_of_bug_fix_patterns.pdf:application/pdf}
}

@inproceedings{liebig_analysis_2010,
	title = {An analysis of the variability in forty preprocessor-based software product lines},
	volume = {1},
	url = {http://ieeexplore.ieee.org/abstract/document/6062078/},
	urldate = {2017-07-19},
	booktitle = {Software {Engineering}, 2010 {ACM}/{IEEE} 32nd {International} {Conference} on},
	publisher = {IEEE},
	author = {Liebig, Jorg and Apel, Sven and Lengauer, Christian and Kästner, Christian and Schulze, Michael},
	year = {2010},
	pages = {105--114},
	file = {2010-An_Analysis_of_the_Variability_in_Forty_Preprocessor-based_Software_Product_Lines.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/G7BWGN3H/2010-An_Analysis_of_the_Variability_in_Forty_Preprocessor-based_Software_Product_Lines.pdf:application/pdf}
}

@article{guo_genetic_2011,
	title = {A genetic algorithm for optimized feature selection with resource constraints in software product lines},
	volume = {84},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121211001518},
	number = {12},
	urldate = {2017-07-19},
	journal = {Journal of Systems and Software},
	author = {Guo, Jianmei and White, Jules and Wang, Guangxin and Li, Jian and Wang, Yinglin},
	year = {2011},
	pages = {2208--2221},
	file = {2011-A_Genetic_Algorithm_for_Optimized_Feature_Selection_with_Resource_Constraints_in_Software_Product_Lines (1).pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/IHJB2AIP/2011-A_Genetic_Algorithm_for_Optimized_Feature_Selection_with_Resource_Constraints_in_Software_Product_Lines (1).pdf:application/pdf}
}

@article{peng_analyzing_2011,
	title = {Analyzing evolution of variability in a software product line: {From} contexts and requirements to features},
	volume = {53},
	issn = {09505849},
	shorttitle = {Analyzing evolution of variability in a software product line},
	url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584911000024},
	doi = {10.1016/j.infsof.2011.01.001},
	language = {en},
	number = {7},
	urldate = {2017-07-19},
	journal = {Information and Software Technology},
	author = {Peng, Xin and Yu, Yijun and Zhao, Wenyun},
	month = jul,
	year = {2011},
	pages = {707--721},
	annote = {Peng et al approach the phenomenon of evolution in variability, i.e., feature modeling, by asking which factors actually drive changes in variability. They conceive any evolutionary step as as reaction to exterior factors changing, including contexts (driving: when does a solution make sense at all, supporting: when is it worth keeping a solution), functional requirements as well as the trade-off between desired non-functional requirements and those that are unexpected or simply hurting.Based on their context- and requirements-driven evolution model, they propose three major evolution type patterns. (1) a mandatory feature can become optional, (2) for a mandatory/optional feature, a new alternative is introduced and (3) for an alternative feature, an additional, dependent feature is added. The basic change patterns in requirements/contexts are fourfold, including (a) a new driving context, (b) a weakend supportive context, (c) insufficient (non-functional) quality satisfaction and (d) unacceptable quality concession. Note that (c) and (d) both refer to the trade-off of non-functional reqiurements.They evaluate their model on a sample product line (CAGS-PL) and find the respective evolution patterns. They do not claim to have found a sound set of eovlution patterns, though more complex ones are expected to be composed from the forsaid patterns.
 },
	file = {2011-Analyzing_evolution_of_variability_in_a_software_product_line_From_contexts_and_requirements_to_features.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/VU6DQK9M/2011-Analyzing_evolution_of_variability_in_a_software_product_line_From_contexts_and_requirements_to_features.pdf:application/pdf}
}

@article{breivold_systematic_2012,
	title = {A systematic review of software architecture evolution research},
	volume = {54},
	issn = {09505849},
	url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584911001376},
	doi = {10.1016/j.infsof.2011.06.002},
	language = {en},
	number = {1},
	urldate = {2017-07-19},
	journal = {Information and Software Technology},
	author = {Breivold, Hongyu Pei and Crnkovic, Ivica and Larsson, Magnus},
	month = jan,
	year = {2012},
	pages = {16--40},
	file = {2012-A_systematic_review_of_software_architecture_evolution_research.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/33JUZTNZ/2012-A_systematic_review_of_software_architecture_evolution_research.pdf:application/pdf}
}

@inproceedings{seidl_co-evolution_2012,
	title = {Co-evolution of models and feature mapping in software product lines},
	url = {http://dl.acm.org/citation.cfm?id=2362550},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 16th {International} {Software} {Product} {Line} {Conference}-{Volume} 1},
	publisher = {ACM},
	author = {Seidl, Christoph and Heidenreich, Florian and A{\textbackslash}s smann, Uwe},
	year = {2012},
	pages = {76--85},
	file = {2012-Co-evolution_of_Models_and_Feature_Mapping_in_Software_Product_Lines.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/D9QAEUZZ/2012-Co-evolution_of_Models_and_Feature_Mapping_in_Software_Product_Lines.pdf:application/pdf}
}

@article{de_silva_controlling_2012,
	title = {Controlling software architecture erosion: {A} survey},
	volume = {85},
	shorttitle = {Controlling software architecture erosion},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121211002044},
	number = {1},
	urldate = {2017-07-19},
	journal = {Journal of Systems and Software},
	author = {De Silva, Lakshitha and Balasubramaniam, Dharini},
	year = {2012},
	pages = {132--151},
	file = {2012-Controlling_software_architecture_erosion_A_survey.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/I7G4EXEM/2012-Controlling_software_architecture_erosion_A_survey.pdf:application/pdf}
}

@article{koziolek_performance_2013,
	title = {Performance and reliability prediction for evolving service-oriented software systems},
	volume = {18},
	url = {http://link.springer.com/article/10.1007/s10664-012-9213-0},
	number = {4},
	urldate = {2017-07-19},
	journal = {Empirical Software Engineering},
	author = {Koziolek, Heiko and Schlich, Bastian and Becker, Steffen and Hauck, Michael},
	year = {2013},
	pages = {746--790},
	file = {2012-Performance_and_reliability_prediction_for_evolving_service-oriented_software_systems.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/633Q2Q8Q/2012-Performance_and_reliability_prediction_for_evolving_service-oriented_software_systems.pdf:application/pdf}
}

@inproceedings{siegmund_predicting_2012,
	title = {Predicting performance via automated feature-interaction detection},
	url = {http://ieeexplore.ieee.org/abstract/document/6227196/},
	urldate = {2017-07-19},
	booktitle = {Software {Engineering} ({ICSE}), 2012 34th {International} {Conference} on},
	publisher = {IEEE},
	author = {Siegmund, Norbert and Kolesnikov, Sergiy S. and Kästner, Christian and Apel, Sven and Batory, Don and Rosenmüller, Marko and Saake, Gunter},
	year = {2012},
	pages = {167--177},
	annote = {Siegmund et al. provide a simplistic performance model to predict performance for arbitrary product line configurations. With potentially exponential configuration space, their approach relies on measuring the impact of single features rather than complete configurations. Although their approach incorporates multiple heuristics, predictions made for six systems from different domains show promising results and accurate predictions.},
	file = {2012-Predicting_Performance_via_Automated_Feature-_Interaction_Detection.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/FQZ7EMMT/2012-Predicting_Performance_via_Automated_Feature-_Interaction_Detection.pdf:application/pdf}
}

@inproceedings{heger_automated_2013,
	title = {Automated root cause isolation of performance regressions during software development},
	url = {http://dl.acm.org/citation.cfm?id=2479879},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 4th {ACM}/{SPEC} {International} {Conference} on {Performance} {Engineering}},
	publisher = {ACM},
	author = {Heger, Christoph and Happe, Jens and Farahbod, Roozbeh},
	year = {2013},
	pages = {27--38},
	annote = {Heger et al propose an approach for detecting performance regression in early stages during development. Their approach relies on performance-aware unit tests, i.e., those whose performance time can accurately be measured. Using the bisect algorithm known from git, defective revisions are detected and, subsequently, systematic measurements on dynamically extracted call tree information is used to detect the root cause of performance degrading.The paper, though, does not contribute to perfomance testing as the primary objective rather than detecting performance regression in particular.
 },
	file = {2013-Automated_root_cause_isolation_of_performance_regressions_during_software_development.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/4692QCM5/2013-Automated_root_cause_isolation_of_performance_regressions_during_software_development.pdf:application/pdf}
}

@inproceedings{liebig_scalable_2013,
	title = {Scalable analysis of variable software},
	url = {http://dl.acm.org/citation.cfm?id=2491437},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 2013 9th {Joint} {Meeting} on {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Liebig, Jörg and von Rhein, Alexander and Kästner, Christian and Apel, Sven and Dörre, Jens and Lengauer, Christian},
	year = {2013},
	pages = {81--91},
	file = {2013-Scalable_analysis_of_variable_software.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/4UNNRBKF/2013-Scalable_analysis_of_variable_software.pdf:application/pdf}
}

@inproceedings{sayyad_scalable_2013,
	title = {Scalable product line configuration: {A} straw to break the camel's back},
	shorttitle = {Scalable product line configuration},
	url = {http://ieeexplore.ieee.org/abstract/document/6693104/},
	urldate = {2017-07-19},
	booktitle = {Automated {Software} {Engineering} ({ASE}), 2013 {IEEE}/{ACM} 28th {International} {Conference} on},
	publisher = {IEEE},
	author = {Sayyad, Abdel Salam and Ingram, Joseph and Menzies, Tim and Ammar, Hany},
	year = {2013},
	pages = {465--474},
	file = {2013-Scalable_product_line_configuration_A_straw_to_break_the_camels_back.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/BV6DVIM9/2013-Scalable_product_line_configuration_A_straw_to_break_the_camels_back.pdf:application/pdf}
}

@article{aleti_software_2013,
	title = {Software {Architecture} {Optimization} {Methods}: {A} {Systematic} {Literature} {Review}},
	volume = {39},
	issn = {0098-5589, 1939-3520},
	shorttitle = {Software {Architecture} {Optimization} {Methods}},
	url = {http://ieeexplore.ieee.org/document/6311410/},
	doi = {10.1109/TSE.2012.64},
	number = {5},
	urldate = {2017-07-19},
	journal = {IEEE Transactions on Software Engineering},
	author = {Aleti, Aldeida and Buhnova, Barbora and Grunske, Lars and Koziolek, Anne and Meedeniya, Indika},
	month = may,
	year = {2013},
	pages = {658--683},
	file = {2013-Software_architecture_optimization_methods_A_systematic_literature_review.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/JF54ENMT/2013-Software_architecture_optimization_methods_A_systematic_literature_review.pdf:application/pdf}
}

@inproceedings{apel_strategies_2013,
	title = {Strategies for product-line verification: case studies and experiments},
	shorttitle = {Strategies for product-line verification},
	url = {http://dl.acm.org/citation.cfm?id=2486852},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 2013 {International} {Conference} on {Software} {Engineering}},
	publisher = {IEEE Press},
	author = {Apel, Sven and Rhein, Alexander von and Wendler, Philipp and Grö{\textbackslash}s slinger, Armin and Beyer, Dirk},
	year = {2013},
	pages = {482--491},
	file = {2013-Strategies_for_product-line_verification_Case_studies_and_experiments (1).pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/2PPAP9CK/2013-Strategies_for_product-line_verification_Case_studies_and_experiments (1).pdf:application/pdf}
}

@inproceedings{zhang_variability_2013,
	title = {Variability evolution and erosion in industrial product lines: a case study},
	shorttitle = {Variability evolution and erosion in industrial product lines},
	url = {http://dl.acm.org/citation.cfm?id=2491645},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 17th {International} {Software} {Product} {Line} {Conference}},
	publisher = {ACM},
	author = {Zhang, Bo and Becker, Martin and Patzke, Thomas and Sierszecki, Krzysztof and Savolainen, Juha Erik},
	year = {2013},
	pages = {168--177},
	file = {2013-Variability_evolution_and_erosion_in_industrial_product_lines.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/5D56SSS2/2013-Variability_evolution_and_erosion_in_industrial_product_lines.pdf:application/pdf}
}

@article{thum_classification_2014,
	title = {A {Classification} and {Survey} of {Analysis} {Strategies} for {Software} {Product} {Lines}},
	volume = {47},
	issn = {03600300},
	url = {http://dl.acm.org/citation.cfm?doid=2620784.2580950},
	doi = {10.1145/2580950},
	language = {en},
	number = {1},
	urldate = {2017-07-19},
	journal = {ACM Computing Surveys},
	author = {Thüm, Thomas and Apel, Sven and Kästner, Christian and Schaefer, Ina and Saake, Gunter},
	month = jun,
	year = {2014},
	pages = {1--45},
	file = {2014-A_Classification_and_Survey_of_Analysis_Strategies_for_Software_Product_Lines.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/APN2DMHE/2014-A_Classification_and_Survey_of_Analysis_Strategies_for_Software_Product_Lines.pdf:application/pdf;2016-Scaling_size_and_parameter_spaces_in_variability-aware_software_performance_models.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/VC3WMZHU/2016-Scaling_size_and_parameter_spaces_in_variability-aware_software_performance_models.pdf:application/pdf}
}

@inproceedings{nguyen_industrial_2014,
	title = {An industrial case study of automatically identifying performance regression-causes},
	url = {http://dl.acm.org/citation.cfm?id=2597092},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 11th {Working} {Conference} on {Mining} {Software} {Repositories}},
	publisher = {ACM},
	author = {Nguyen, Thanh HD and Nagappan, Meiyappan and Hassan, Ahmed E. and Nasser, Mohamed and Flora, Parminder},
	year = {2014},
	pages = {232--241},
	annote = {Ngyuen et al. propose an automatic approach to detect performance regression root-causes (i.e., qualitative explanations for performance regression). Their approach is build on different metrics suitable for performance measuring, such as CPU usage or memory utilization. For given test cases, an older version is employed as baseline compared to a newer test revision. For each test/measurement, control charts are used to calculate the so-called violation ratio (i.e., how many data points actually deviate from the baseline measurement). Subsequently, for training data, a variety of ML techniques are employed to learn and then classify performance regression causes. Their approach is applied on both an open-source and a proprietary system of RIM/BlackBerry.
 },
	file = {2014-An_industrial_case_study_of_automatically_identifying_performance_regression-causes.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/HUTUU4Q3/2014-An_industrial_case_study_of_automatically_identifying_performance_regression-causes.pdf:application/pdf}
}

@article{chandrashekar_survey_2014,
	title = {A survey on feature selection methods},
	volume = {40},
	issn = {00457906},
	url = {http://linkinghub.elsevier.com/retrieve/pii/S0045790613003066},
	doi = {10.1016/j.compeleceng.2013.11.024},
	language = {en},
	number = {1},
	urldate = {2017-07-19},
	journal = {Computers \& Electrical Engineering},
	author = {Chandrashekar, Girish and Sahin, Ferat},
	month = jan,
	year = {2014},
	pages = {16--28},
	annote = {Chandrashekar and Sahin provide a broad overview over feature selection methods that are integral part of machine learning since they enable the selection of relevant/expressive, non-redundant/non-correlated features from a multidimensional data set. In addition, several approaches work in the presence of noise (inexpressive features).Chandrashekar and Sahin discuss three categories of algorithms, including filter methods, wrapper methods and embedded methods. Filter methods include Pearson/Spearmann correlation coefficient measures; wrapper methods comprises sequential methods (e.g., forward or backward feature selection) and heuristic approaches such as Genetic Algorithms; However, wrappe methods are explained briefly. Moreover, the paper touches classiiers (e.g., SVMs, NNs)and respective validation methods (cross-validation, 2- and k-fold validation).},
	file = {2014-A_survey_on_feature_selection_methods.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/82Q5EJZU/2014-A_survey_on_feature_selection_methods.pdf:application/pdf}
}

@inproceedings{passos_feature_2015,
	title = {Feature scattering in the large: a longitudinal study of {Linux} kernel device drivers},
	isbn = {978-1-4503-3249-1},
	shorttitle = {Feature scattering in the large},
	url = {http://dl.acm.org/citation.cfm?doid=2724525.2724575},
	doi = {10.1145/2724525.2724575},
	abstract = {Feature code is often scattered across wide parts of the code base.
But, scattering is not necessarily bad if used with care—in fact,
systems with highly scattered features have evolved successfully
over years. Among others, feature scattering allows developers
to circumvent limitations in programming languages and system
design. Still, little is known about the characteristics governing
scattering, which factors influence it, and practical limits in the
evolution of large and long-lived systems.
We address this issue with a longitudinal case study of feature
scattering in the Linux kernel. We quantitatively and qualitatively
analyze almost eight years of its development history, focusing on
scattering of device-driver features. Among others, we show that,
while scattered features are regularly added, their proportion is
lower than non-scattered ones, indicating that the kernel architecture
allows most features to be integrated in a modular manner. The
median scattering degree of features is constant and low, but the
scattering-degree distribution is heavily skewed. Thus, using the
arithmetic mean is not a reliable threshold to monitor the evolution
of feature scattering. When investigating influencing factors, we find
that platform-driver features are 2.5 times more likely to be scattered
across architectural (subsystem) boundaries when compared to non-
platform ones. Their use illustrates a maintenance-performance
trade-off in creating architectures as for Linux kernel device drivers.},
	language = {en},
	urldate = {2017-07-19},
	publisher = {ACM Press},
	author = {Passos, Leonardo and Padilla, Jesús and Berger, Thorsten and Apel, Sven and Czarnecki, Krzysztof and Valente, Marco Tulio},
	year = {2015},
	pages = {81--92},
	file = {2015-Feature_scattering_in_the_large_a_longitudinal_study_of_Linux_kernel_device_drivers.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/NCBSI7ZD/2015-Feature_scattering_in_the_large_a_longitudinal_study_of_Linux_kernel_device_drivers.pdf:application/pdf}
}

@inproceedings{joblin_developer_2015,
	title = {From {Developer} {Networks} to {Verified} {Communities}: {A} {Fine}-{Grained} {Approach}},
	isbn = {978-1-4799-1934-5},
	shorttitle = {From {Developer} {Networks} to {Verified} {Communities}},
	url = {http://ieeexplore.ieee.org/document/7194606/},
	doi = {10.1109/ICSE.2015.73},
	urldate = {2017-07-19},
	publisher = {IEEE},
	author = {Joblin, Mitchell and Mauerer, Wolfgang and Apel, Sven and Siegmund, Janet and Riehle, Dirk},
	month = may,
	year = {2015},
	pages = {563--573},
	file = {2015-From_developer_networks_to_verified_communities_A_fine-grained_approach.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/3R3BHKTP/2015-From_developer_networks_to_verified_communities_A_fine-grained_approach.pdf:application/pdf}
}

@inproceedings{kowal_scaling_2015,
	title = {Scaling size and parameter spaces in variability-aware software performance models (t)},
	url = {http://ieeexplore.ieee.org/abstract/document/7372029/},
	urldate = {2017-07-19},
	booktitle = {Automated {Software} {Engineering} ({ASE}), 2015 30th {IEEE}/{ACM} {International} {Conference} on},
	publisher = {IEEE},
	author = {Kowal, Matthias and Tschaikowski, Max and Tribastone, Mirco and Schaefer, Ina},
	year = {2015},
	pages = {407--417},
	file = {2016-Scaling_size_and_parameter_spaces_in_variability-aware_software_performance_models.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/697F29M3/2016-Scaling_size_and_parameter_spaces_in_variability-aware_software_performance_models.pdf:application/pdf}
}

@inproceedings{xu_hey_2015,
	title = {Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software},
	isbn = {978-1-4503-3675-8},
	shorttitle = {Hey, you have given me too many knobs!},
	url = {http://dl.acm.org/citation.cfm?doid=2786805.2786852},
	doi = {10.1145/2786805.2786852},
	language = {en},
	urldate = {2017-07-19},
	publisher = {ACM Press},
	author = {Xu, Tianyin and Jin, Long and Fan, Xuepeng and Zhou, Yuanyuan and Pasupathy, Shankar and Talwadker, Rukma},
	year = {2015},
	pages = {307--319},
	annote = {Xu et al. address the question of whether configurable software systems may offer too many configuration options to users, possibly leading to poorly understood and configured software systems. Their findings indicate that the vast majority of options is seldom used, whereas very few options are commonly selected. Moreover, options whose effect can be anticipated are more likely to be selected; this applies to numeric as well as boolean/enumerative type options.Based on their findings Xu et al.set up guidelines for simplification of configuration design. The guidelines emphasize the importance of option relevance (how likely it might need to be selected), type (numeric vs discrete) and expressiveness (whether the effect can be anticipated). Simplification following these guideline showed a decrease in configuration options of up to 50\%. In addition, to find a desired configuration option basic keyword search might not be sufficient and is rather replaced by search-engines or NLP-based techniques.Xu. et al advocate for keeping configuration design simple.},
	file = {c2c45835a1dd3d29f9886010c652063b7bad.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/ASMQHSTP/c2c45835a1dd3d29f9886010c652063b7bad.pdf:application/pdf}
}

@article{berger_study_2013,
	title = {A {Study} of {Variability} {Models} and {Languages} in the {Systems} {Software} {Domain}},
	volume = {39},
	issn = {0098-5589, 1939-3520},
	url = {http://ieeexplore.ieee.org/document/6572787/},
	doi = {10.1109/TSE.2013.34},
	number = {12},
	urldate = {2017-07-19},
	journal = {IEEE Transactions on Software Engineering},
	author = {Berger, Thorsten and She, Steven and Lotufo, Rafael and Wasowski, Andrzej and Czarnecki, Krzysztof},
	month = dec,
	year = {2013},
	pages = {1611--1640},
	file = {2013-tse-berger-variability-models.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/VDNUCDVW/2013-tse-berger-variability-models.pdf:application/pdf}
}

@inproceedings{nadi_mining_2014,
	title = {Mining configuration constraints: {Static} analyses and empirical results},
	shorttitle = {Mining configuration constraints},
	url = {http://dl.acm.org/citation.cfm?id=2568283},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 36th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Nadi, Sarah and Berger, Thorsten and Kästner, Christian and Czarnecki, Krzysztof},
	year = {2014},
	pages = {140--151},
	file = {icse14_mining.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/BPM3XZI6/icse14_mining.pdf:application/pdf}
}

@inproceedings{rabkin_static_2011,
	title = {Static extraction of program configuration options},
	url = {http://dl.acm.org/citation.cfm?id=1985812},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the 33rd {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Rabkin, Ariel and Katz, Randy},
	year = {2011},
	keywords = {configuration options, extraction, static analysis},
	pages = {131--140},
	annote = {Rabkin and Katz extract configuration options by statically analyzing software systems. They exploit configuration APIs to detect configuration options and possibly respective domains as well.
In detail, first, they explore code sections where options are read, and, second, they detect possible option names at these code sections.Their approach eases configuration debugging as well as documentation},
	file = {p131-rabkin.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/VGFDSW4W/p131-rabkin.pdf:application/pdf}
}

@inproceedings{zhou_extracting_2015,
	title = {Extracting configuration knowledge from build files with symbolic analysis},
	url = {http://dl.acm.org/citation.cfm?id=2820700},
	urldate = {2017-07-19},
	booktitle = {Proceedings of the {Third} {International} {Workshop} on {Release} {Engineering}},
	publisher = {IEEE Press},
	author = {Zhou, Shurui and Al-Kofahi, Jafar and Nguyen, Tien N. and Kästner, Christian and Nadi, Sarah},
	year = {2015},
	keywords = {build, configuration, extraction, presence conditions, static analysis, symbolic evaluation},
	pages = {20--23},
	annote = {Zhou et al. perform symbolic evaluation on (turing-complete) Makefiles to extract a conditional build script (similar to preprocessor directives) and therefore make build-time variability easier accessible.
 },
	file = {Releng2015.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/QPFEUDX3/Releng2015.pdf:application/pdf}
}

@article{nadi_where_2015,
	title = {Where do configuration constraints stem from? an extraction approach and an empirical study},
	volume = {41},
	shorttitle = {Where do configuration constraints stem from?},
	url = {http://ieeexplore.ieee.org/abstract/document/7065312/},
	number = {8},
	urldate = {2017-07-19},
	journal = {IEEE Transactions on Software Engineering},
	author = {Nadi, Sarah and Berger, Thorsten and Kästner, Christian and Czarnecki, Krzysztof},
	year = {2015},
	keywords = {conditional compilation, configuration constraints, configuration options, extraction, qualitative analysis, static analysis},
	pages = {820--841},
	annote = {Nadi et al. propose a static analysis approach for extracting configuration constraints from software systems employing conditional compilation. Their approach is based on Typechef and aims to infer constraints for two rules, of which the first one is a) that all valid configuration should build correctly, and the second states that b) all valid configurations must yield lexically different programs. Constraints inferred according to these rules show high accuracy (93 and 77\%), yet only 27\% of all existing model constraints could be recovered in their four systems case study. Constraints are originated in the problem space as well as in the solution space.
They state that in principle the majority of constraint may be extractable from code, yet non-code knowlodge is still necessary.},
	file = {Where do Configuration Constraints Stem From- An Extraction Appro.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/4UX5BV96/Where do Configuration Constraints Stem From- An Extraction Appro.pdf:application/pdf}
}

@article{lopez-herrejon_reverse_2012,
	title = {Reverse engineering feature models with evolutionary algorithms: {An} exploratory study.},
	abstract = {Successful software evolves, more and more commonly, from
a single system to a set of system variants tailored to meet the similiar
and yet dierent functionality required by the distinct clients and
users. Software Product Line Engineering (SPLE) is a software development
paradigm that has proven eective for coping with this scenario. At
the core of SPLE is variability modeling which employs Feature Models
(FMs) as the de facto standard to represent the combinations of features
that distinguish the systems variants. Reverse engineering FMs consist in
constructing a feature model from a set of products descriptions. This research
area is becoming increasingly active within the SPLE community,
where the problem has been addressed with dierent perspectives and
approaches ranging from analysis of conguration scripts, use of propositional
logic or natural language techniques, to ad hoc algorithms. In
this paper, we explore the feasibility of using Evolutionary Algorithms
(EAs) to synthesize FMs from the feature sets that describe the system
variants. We analyzed 59 representative case studies of dierent characteristics
and complexity. Our exploratory study found that FMs that
denote proper supersets of the desired feature sets can be obtained with a
small number of generations. However, reducing the dierences between
these two sets with an eective and scalable tness function remains an
open question. We believe that this work is a rst step towards leveraging
the extensive wealth of Search-Based Software Engineering techniques to
address this and other variability management challenges.},
	journal = {Search Based Software Engineering},
	author = {Lopez-Herrejon, Roberto and Galindo, José and Benavides, David and Segura, Sergio and Egyed, Alexander},
	year = {2012},
	keywords = {evolutionary algorithms, feature model synthesis, genetic algorithms, hierarchy},
	pages = {168--182},
	file = {ssbse2012.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/RESCT7CM/ssbse2012.pdf:application/pdf}
}

@inproceedings{passos_towards_2012,
	title = {Towards a catalog of variability evolution patterns: the {Linux} kernel case},
	shorttitle = {Towards a catalog of variability evolution patterns},
	url = {http://dl.acm.org/citation.cfm?id=2377825},
	urldate = {2017-07-20},
	booktitle = {Proceedings of the 4th {International} {Workshop} on {Feature}-{Oriented} {Software} {Development}},
	publisher = {ACM},
	author = {Passos, Leonardo and Czarnecki, Krzysztof and Wąsowski, Andrzej},
	year = {2012},
	pages = {62--69},
	file = {2012-passos-towards-catalog-variability-evolution-patterns-linux-kernel_0.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/V7PW4X7V/2012-passos-towards-catalog-variability-evolution-patterns-linux-kernel_0.pdf:application/pdf}
}

@article{georges_statistically_2007,
	title = {Statistically rigorous java performance evaluation},
	volume = {42},
	url = {http://dl.acm.org/citation.cfm?id=1297033},
	number = {10},
	urldate = {2017-07-24},
	journal = {ACM SIGPLAN Notices},
	author = {Georges, Andy and Buytaert, Dries and Eeckhout, Lieven},
	year = {2007},
	pages = {57--76},
	file = {andy-georges-paper.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/BKJIDSHA/andy-georges-paper.pdf:application/pdf}
}

@article{mytkowicz_producing_2009,
	title = {Producing wrong data without doing anything obviously wrong!},
	volume = {44},
	url = {http://dl.acm.org/citation.cfm?id=1508275},
	number = {3},
	urldate = {2017-07-24},
	journal = {ACM Sigplan Notices},
	author = {Mytkowicz, Todd and Diwan, Amer and Hauswirth, Matthias and Sweeney, Peter F.},
	year = {2009},
	pages = {265--276},
	file = {p265-mytkowicz.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/4CEUBQCF/p265-mytkowicz.pdf:application/pdf}
}

@inproceedings{sen_multise:_2015,
	title = {{MultiSE}: {Multi}-path symbolic execution using value summaries},
	shorttitle = {{MultiSE}},
	url = {http://dl.acm.org/citation.cfm?id=2786830},
	urldate = {2017-07-24},
	booktitle = {Proceedings of the 2015 10th {Joint} {Meeting} on {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Sen, Koushik and Necula, George and Gong, Liang and Choi, Wontae},
	year = {2015},
	pages = {842--853},
	file = {p842-sen.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/5NTTRJJB/p842-sen.pdf:application/pdf}
}

@inproceedings{parnas_software_1994,
	title = {Software aging},
	url = {http://dl.acm.org/citation.cfm?id=257788},
	urldate = {2017-07-24},
	booktitle = {Proceedings of the 16th international conference on {Software} engineering},
	publisher = {IEEE Computer Society Press},
	author = {Parnas, David Lorge},
	year = {1994},
	pages = {279--287},
	annote = {In this talk, Parnas coins the term of ‘software aging’ as a phenomenon and process comparable to an organism aging. Despite software being essentially mathematical and provable, Parnas argues that software ages as the software and the requirements it is intended to meet evolve. Either by not adapting the software to changes or by doing exactly that poorly, software becomes harder to maintain and adapt to changing requirements. 
As changes are made by several developers and not necessarily people in charge of the initial design, knowledge about the design and desired structure becomes unavailable leading to ignorant modifications violating previously met guidelines and constraints, in conclusion leading to program degradation},
	file = {bullet11.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/AXMHDBER/bullet11.pdf:application/pdf}
}

@article{perry_software_1991,
	title = {Software architecture},
	url = {https://pdfs.semanticscholar.org/bb64/7619cf374c8f25847f76bf18f8f07e6f5232.pdf},
	urldate = {2017-07-24},
	journal = {Submitted for publication},
	author = {Perry, Dewayne E. and Wolf, Alexander L.},
	year = {1991},
	annote = {Perry and Wolf present motivations for software architecture specifications as architecture so far is usually not explicitly designed or even specified. They argue that for software architecture, evolution and customization (as an indicator for yet not reached maturity) are essential. As software systems evolve, they describe software to become "brittle" over time, caused by architectural erosion (violation of existing architecture when modifying code) and architectural drift (being insensitive about architectural constraints/guidelines). Erosion and drift, according to Perry and Wolf, lead to defects or at least inadaptability respectively.},
	file = {Foundations_for_the_Study_of_Software_Ar.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/TXZZDCRE/Foundations_for_the_Study_of_Software_Ar.pdf:application/pdf}
}

@inproceedings{batory_feature_2005,
	title = {Feature models, grammars, and propositional formulas},
	volume = {3714},
	url = {http://link.springer.com/content/pdf/10.1007/11554844.pdf#page=19},
	urldate = {2017-07-24},
	booktitle = {{SPLC}},
	publisher = {Springer},
	author = {Batory, Don},
	year = {2005},
	pages = {7--20},
	file = {splc05.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/DBH6N2WZ/splc05.pdf:application/pdf}
}

@article{fleming_how_1986,
	title = {How not to lie with statistics: the correct way to summarize benchmark results},
	volume = {29},
	shorttitle = {How not to lie with statistics},
	url = {http://dl.acm.org/citation.cfm?id=5673},
	number = {3},
	urldate = {2017-07-25},
	journal = {Communications of the ACM},
	author = {Fleming, Philip J. and Wallace, John J.},
	year = {1986},
	pages = {218--221},
	file = {geo.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/IKPQW9EM/geo.pdf:application/pdf}
}

@book{molyneaux_art_2014,
	edition = {2},
	title = {The {Art} of {Application} {Performance} {Testing}: {Help} for {Programmers} and {Quality} {Assurance}},
	publisher = {O'Reilly Media, Inc.},
	author = {Molyneaux, Ian},
	year = {2014}
}

@book{le_goues_search-based_2014,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Search-{Based} {Software} {Engineering}},
	volume = {8636},
	isbn = {978-3-319-09939-2 978-3-319-09940-8},
	url = {http://link.springer.com/10.1007/978-3-319-09940-8},
	urldate = {2017-07-30},
	publisher = {Springer International Publishing},
	editor = {Le Goues, Claire and Yoo, Shin},
	year = {2014},
	note = {DOI: 10.1007/978-3-319-09940-8},
	file = {10.1007%2F978-3-319-09940-8.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/7SEZBMJX/10.1007%2F978-3-319-09940-8.pdf:application/pdf}
}

@inproceedings{alves_exploratory_2008,
	title = {An exploratory study of information retrieval techniques in domain analysis},
	url = {http://ieeexplore.ieee.org/abstract/document/4626841/},
	urldate = {2017-07-30},
	booktitle = {Software {Product} {Line} {Conference}, 2008. {SPLC}'08. 12th {International}},
	publisher = {IEEE},
	author = {Alves, Vander and Schwanninger, Christa and Barbosa, Luciano and Rashid, Awais and Sawyer, Peter and Rayson, Paul and Pohl, Christoph and Rummler, Andreas},
	year = {2008},
	keywords = {domain analysis, exploratory study, information retrieval, survey},
	pages = {67--76},
	file = {An_Exploratory_Study_of_Information_Retrieval_Tech.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/HMV7KCEI/An_Exploratory_Study_of_Information_Retrieval_Tech.pdf:application/pdf}
}

@article{becan_breathing_2016,
	title = {Breathing ontological knowledge into feature model synthesis: an empirical study},
	volume = {21},
	shorttitle = {Breathing ontological knowledge into feature model synthesis},
	url = {http://link.springer.com/article/10.1007/s10664-014-9357-1},
	number = {4},
	urldate = {2017-07-30},
	journal = {Empirical Software Engineering},
	author = {Bécan, Guillaume and Acher, Mathieu and Baudry, Benoit and Nasr, Sana Ben},
	year = {2016},
	pages = {1794--1841},
	file = {ESE-KSynthesis.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/G72TG6I3/ESE-KSynthesis.pdf:application/pdf}
}

@inproceedings{davril_feature_2013,
	title = {Feature model extraction from large collections of informal product descriptions},
	url = {http://dl.acm.org/citation.cfm?id=2491455},
	urldate = {2017-07-30},
	booktitle = {Proceedings of the 2013 9th {Joint} {Meeting} on {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Davril, Jean-Marc and Delfosse, Edouard and Hariri, Negar and Acher, Mathieu and Cleland-Huang, Jane and Heymans, Patrick},
	year = {2013},
	pages = {290--300},
	file = {fse13main-id221-p-18686-final.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/XKTFBVDJ/fse13main-id221-p-18686-final.pdf:application/pdf}
}

@inproceedings{she_reverse_2011,
	title = {Reverse engineering feature models},
	url = {http://ieeexplore.ieee.org/abstract/document/6032485/},
	urldate = {2017-07-30},
	booktitle = {Software {Engineering} ({ICSE}), 2011 33rd {International} {Conference} on},
	publisher = {IEEE},
	author = {She, Steven and Lotufo, Rafael and Berger, Thorsten and Wasowski, Andrzej and Czarnecki, Krzysztof},
	year = {2011},
	keywords = {feature hierarchy, feature model synthesis, heuristic, information retrieval, reverse engineering},
	pages = {461--470},
	annote = {She and others propose a semi-automated approach to reverse engineer variability models from existing resources. Their method is based on a known set of feature names, a list of feature dependencies (to other features) and plain text feature descriptions.Their approach basically aims to build a meaningful hierarchy of features along with feature groups and cross-tree constraints. For hierarchy detection, information retrieval techniques are employed as well as user decisions.},
	file = {icse2011.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/56M8R54H/icse2011.pdf:application/pdf}
}

@inproceedings{weston_framework_2009,
	title = {A framework for constructing semantically composable feature models from natural language requirements},
	url = {http://dl.acm.org/citation.cfm?id=1753265},
	urldate = {2017-07-30},
	booktitle = {Proceedings of the 13th {International} {Software} {Product} {Line} {Conference}},
	publisher = {Carnegie Mellon University},
	author = {Weston, Nathan and Chitchyan, Ruzanna and Rashid, Awais},
	year = {2009},
	keywords = {domain analysis, requirements engineering},
	pages = {211--220},
	file = {p211-weston.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/2XU252PU/p211-weston.pdf:application/pdf}
}

@article{nasr_automated_2017,
	title = {Automated extraction of product comparison matrices from informal product descriptions},
	volume = {124},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121216302242},
	urldate = {2017-07-30},
	journal = {Journal of Systems and Software},
	author = {Nasr, Sana Ben and Bécan, Guillaume and Acher, Mathieu and Ferreira Filho, João Bosco and Sannier, Nicolas and Baudry, Benoit and Davril, Jean-Marc},
	year = {2017},
	keywords = {domain analysis},
	pages = {82--103},
	file = {spedoc.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/9FC72SHV/spedoc.pdf:application/pdf}
}

@incollection{linsbauer_feature_2014,
	address = {Cham},
	title = {Feature {Model} {Synthesis} with {Genetic} {Programming}},
	isbn = {978-3-319-09940-8},
	url = {https://doi.org/10.1007/978-3-319-09940-8_11},
	abstract = {Search-Based Software Engineering (SBSE) has proven successful on several stages of the software development life cycle. It has also been applied to different challenges in the context of Software Product Lines (SPLs) like generating minimal test suites. When reverse engineering SPLs from legacy software an important challenge is the reverse engineering of variability, often expressed in the form of Feature Models (FMs). The synthesis of FMs has been studied with techniques such as Genetic Algorithms. In this paper we explore the use of Genetic Programming for this task. We sketch our general workflow, the GP pipeline employed, and its evolutionary operators. We report our experience in synthesizing feature models from sets of feature combinations for 17 representative feature models, and analyze the results using standard information retrieval metrics.},
	booktitle = {Search-{Based} {Software} {Engineering}: 6th {International} {Symposium}, {SSBSE} 2014, {Fortaleza}, {Brazil}, {August} 26-29, 2014. {Proceedings}},
	publisher = {Springer International Publishing},
	author = {Linsbauer, Lukas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
	editor = {Le Goues, Claire and Yoo, Shin},
	year = {2014},
	note = {DOI: 10.1007/978-3-319-09940-8\_11},
	pages = {153--167}
}

@inproceedings{linsbauer_feature_2014-1,
	title = {Feature model synthesis with genetic programming},
	url = {http://link.springer.com/chapter/10.1007/978-3-319-09940-8_11},
	urldate = {2017-07-30},
	booktitle = {International {Symposium} on {Search} {Based} {Software} {Engineering}},
	publisher = {Springer},
	author = {Linsbauer, Lukas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
	year = {2014},
	keywords = {feature model synthesis, genetic algorithms, hierarchy},
	pages = {153--167},
	annote = {Linsbauer et al. use genetic algorithm to approximate a feature model for given sets of valid configurations.},
	file = {10.1007%2F978-3-319-09940-8_11.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/7PBHS5QN/10.1007%2F978-3-319-09940-8_11.pdf:application/pdf}
}

@inproceedings{dietrich_robust_2012,
	title = {A robust approach for variability extraction from the {Linux} build system},
	url = {http://dl.acm.org/citation.cfm?id=2362544},
	urldate = {2017-08-02},
	booktitle = {Proceedings of the 16th {International} {Software} {Product} {Line} {Conference}-{Volume} 1},
	publisher = {ACM},
	author = {Dietrich, Christian and Tartler, Reinhard and Schröder-Preikschat, Wolfgang and Lohmann, Daniel},
	year = {2012},
	pages = {21--30},
	file = {402ddbfe2aecd366d7322b81f142fe25e7ec.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/I6W7JIGS/402ddbfe2aecd366d7322b81f142fe25e7ec.pdf:application/pdf}
}

@inproceedings{haslinger_extracting_2013,
	title = {On {Extracting} {Feature} {Models} from {Sets} of {Valid} {Feature} {Combinations}.},
	volume = {13},
	url = {http://link.springer.com/content/pdf/10.1007/978-3-642-37057-1.pdf#page=70},
	urldate = {2017-08-02},
	booktitle = {{FASE}},
	publisher = {Springer},
	author = {Haslinger, Evelyn Nicole and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
	year = {2013},
	pages = {53--67},
	file = {978-3-642-37057-1_5.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/7E2UHZQX/978-3-642-37057-1_5.pdf:application/pdf}
}

@inproceedings{chen_approach_2005,
	title = {An approach to constructing feature models based on requirements clustering},
	url = {http://ieeexplore.ieee.org/abstract/document/1531025/},
	urldate = {2017-08-02},
	booktitle = {Requirements {Engineering}, 2005. {Proceedings}. 13th {IEEE} {International} {Conference} on},
	publisher = {IEEE},
	author = {Chen, Kun and Zhang, Wei and Zhao, Haiyan and Mei, Hong},
	year = {2005},
	pages = {31--40},
	file = {01531025.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/V8RRP3J8/01531025.pdf:application/pdf}
}

@inproceedings{haslinger_reverse_2011,
	title = {Reverse {Engineering} {Feature} {Models} from {Programs}' {Feature} {Sets}},
	isbn = {978-1-4577-1948-6},
	url = {http://ieeexplore.ieee.org/document/6079856/},
	doi = {10.1109/WCRE.2011.45},
	urldate = {2017-08-02},
	publisher = {IEEE},
	author = {Haslinger, Evelyn Nicole and Lopez-Herrejon, Roberto E. and Egyed, Alexander},
	month = oct,
	year = {2011},
	pages = {308--312},
	file = {06079856.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/C7BQBMDI/06079856.pdf:application/pdf}
}

@inproceedings{yi_mining_2012,
	title = {Mining binary constraints in the construction of feature models},
	url = {http://ieeexplore.ieee.org/abstract/document/6345798/},
	urldate = {2017-08-02},
	booktitle = {Requirements {Engineering} {Conference} ({RE}), 2012 20th {IEEE} {International}},
	publisher = {IEEE},
	author = {Yi, Li and Zhang, Wei and Zhao, Haiyan and Jin, Zhi and Mei, Hong},
	year = {2012},
	pages = {141--150},
	file = {06345798.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/F62MRTCU/06345798.pdf:application/pdf}
}

@article{hariri_supporting_2013,
	title = {Supporting {Domain} {Analysis} through {Mining} and {Recommending} {Features} from {Online} {Product} {Listings}},
	volume = {39},
	issn = {0098-5589, 1939-3520},
	url = {http://ieeexplore.ieee.org/document/6582404/},
	doi = {10.1109/TSE.2013.39},
	number = {12},
	urldate = {2017-08-02},
	journal = {IEEE Transactions on Software Engineering},
	author = {Hariri, Negar and Castro-Herrera, Carlos and Mirakhorli, Mehdi and Cleland-Huang, Jane and Mobasher, Bamshad},
	month = dec,
	year = {2013},
	pages = {1736--1752},
	file = {06582404.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/7UHMSRE3/06582404.pdf:application/pdf}
}

@inproceedings{czarnecki_sample_2008,
	title = {Sample spaces and feature models: {There} and back again},
	shorttitle = {Sample spaces and feature models},
	url = {http://ieeexplore.ieee.org/abstract/document/4626837/},
	urldate = {2017-08-02},
	booktitle = {Software {Product} {Line} {Conference}, 2008. {SPLC}'08. 12th {International}},
	publisher = {IEEE},
	author = {Czarnecki, Krzysztof and She, Steven and Wasowski, Andrzej},
	year = {2008},
	pages = {22--31},
	file = {517619597bd77063ff024cf066818613b5df.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/TGXTASAN/517619597bd77063ff024cf066818613b5df.pdf:application/pdf}
}

@article{lopez-herrejon_assessment_2015,
	title = {An assessment of search-based techniques for reverse engineering feature models},
	volume = {103},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121214002349},
	urldate = {2017-08-02},
	journal = {Journal of Systems and Software},
	author = {Lopez-Herrejon, Roberto E. and Linsbauer, Lukas and Galindo, José A. and Parejo, José A. and Benavides, David and Segura, Sergio and Egyed, Alexander},
	year = {2015},
	pages = {353--369},
	file = {An assessment of search-based.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/BWFRMKA7/An assessment of search-based.pdf:application/pdf}
}

@inproceedings{czarnecki_feature_2007,
	title = {Feature diagrams and logics: {There} and back again},
	shorttitle = {Feature diagrams and logics},
	url = {http://ieeexplore.ieee.org/abstract/document/4339252/},
	urldate = {2017-08-02},
	booktitle = {Software {Product} {Line} {Conference}, 2007. {SPLC} 2007. 11th {International}},
	publisher = {IEEE},
	author = {Czarnecki, Krzysztof and Wasowski, Andrzej},
	year = {2007},
	pages = {23--34},
	file = {download.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/3UH7BRG6/download.pdf:application/pdf}
}

@article{bakar_feature_2015,
	title = {Feature extraction approaches from natural language requirements for reuse in software product lines: {A} systematic literature review},
	volume = {106},
	issn = {01641212},
	shorttitle = {Feature extraction approaches from natural language requirements for reuse in software product lines},
	url = {http://linkinghub.elsevier.com/retrieve/pii/S0164121215001004},
	doi = {10.1016/j.jss.2015.05.006},
	language = {en},
	urldate = {2017-08-02},
	journal = {Journal of Systems and Software},
	author = {Bakar, Noor Hasrina and Kasirun, Zarinah M. and Salleh, Norsaremah},
	month = aug,
	year = {2015},
	pages = {132--149},
	file = {Feature_Extraction_Approaches_from_Natur.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/ABSTQ4AH/Feature_Extraction_Approaches_from_Natur.pdf:application/pdf}
}

@article{acher_extraction_2014,
	title = {Extraction and evolution of architectural variability models in plugin-based systems},
	volume = {13},
	url = {http://link.springer.com/article/10.1007/s10270-013-0364-2},
	number = {4},
	urldate = {2017-08-02},
	journal = {Software \& Systems Modeling},
	author = {Acher, Mathieu and Cleve, Anthony and Collet, Philippe and Merle, Philippe and Duchien, Laurence and Lahire, Philippe},
	year = {2014},
	pages = {1367--1394},
	file = {FraSCAtiSoSyM12.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/SVU7JIRG/FraSCAtiSoSyM12.pdf:application/pdf}
}

@inproceedings{acher_support_2013,
	title = {Support for reverse engineering and maintaining feature models},
	url = {http://dl.acm.org/citation.cfm?id=2430530},
	urldate = {2017-08-02},
	booktitle = {Proceedings of the {Seventh} {International} {Workshop} on {Variability} {Modelling} of {Software}-intensive {Systems}},
	publisher = {ACM},
	author = {Acher, Mathieu and Baudry, Benoit and Heymans, Patrick and Cleve, Anthony and Hainaut, Jean-Luc},
	year = {2013},
	keywords = {feature model synthesis, hierarchy, reverse engineering},
	pages = {20},
	file = {KSynthesis-VaMoS2013-CR.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/SNENWDWB/KSynthesis-VaMoS2013-CR.pdf:application/pdf}
}

@inproceedings{acher_extracting_2012,
	title = {On extracting feature models from product descriptions},
	url = {http://dl.acm.org/citation.cfm?id=2110153},
	urldate = {2017-08-02},
	booktitle = {Proceedings of the {Sixth} {International} {Workshop} on {Variability} {Modeling} of {Software}-{Intensive} {Systems}},
	publisher = {ACM},
	author = {Acher, Mathieu and Cleve, Anthony and Perrouin, Gilles and Heymans, Patrick and Vanbeneden, Charles and Collet, Philippe and Lahire, Philippe},
	year = {2012},
	pages = {45--54},
	file = {On_extracting_feature_models_from_produc.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/K4ETC42V/On_extracting_feature_models_from_produc.pdf:application/pdf}
}

@inproceedings{niu_extracting_2008,
	title = {Extracting and modeling product line functional requirements},
	url = {http://ieeexplore.ieee.org/abstract/document/4685664/},
	urldate = {2017-08-02},
	booktitle = {International {Requirements} {Engineering}, 2008. {RE}'08. 16th {IEEE}},
	publisher = {IEEE},
	author = {Niu, Nan and Easterbrook, Steve},
	year = {2008},
	pages = {155--164},
	file = {RE08.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/Q3VNV7DC/RE08.pdf:application/pdf}
}

@inproceedings{niu_-demand_2008,
	title = {On-demand cluster analysis for product line functional requirements},
	url = {http://ieeexplore.ieee.org/abstract/document/4626843/},
	urldate = {2017-08-02},
	booktitle = {Software {Product} {Line} {Conference}, 2008. {SPLC}'08. 12th {International}},
	publisher = {IEEE},
	author = {Niu, Nan and Easterbrook, Steve},
	year = {2008},
	pages = {87--96},
	file = {SPLC08.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/2RXXMDHZ/SPLC08.pdf:application/pdf}
}

@inproceedings{andersen_efficient_2012,
	title = {Efficient synthesis of feature models},
	url = {http://dl.acm.org/citation.cfm?id=2362553},
	urldate = {2017-08-02},
	booktitle = {Proceedings of the 16th {International} {Software} {Product} {Line} {Conference}-{Volume} 1},
	publisher = {ACM},
	author = {Andersen, Nele and Czarnecki, Krzysztof and She, Steven and Wąsowski, Andrzej},
	year = {2012},
	pages = {106--115},
	file = {splc12.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/CMTVWGR2/splc12.pdf:application/pdf}
}

@inproceedings{ferrari_mining_2013,
	title = {Mining commonalities and variabilities from natural language documents},
	isbn = {978-1-4503-1968-3},
	url = {http://dl.acm.org/citation.cfm?doid=2491627.2491634},
	doi = {10.1145/2491627.2491634},
	language = {en},
	urldate = {2017-08-02},
	publisher = {ACM Press},
	author = {Ferrari, Alessio and Spagnolo, Giorgio O. and Dell'Orletta, Felice},
	year = {2013},
	pages = {116},
	file = {SPLC2013.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/N4A9BDHA/SPLC2013.pdf:application/pdf}
}

@inproceedings{guo_variability-aware_2013,
	title = {Variability-aware performance prediction: {A} statistical learning approach},
	shorttitle = {Variability-aware performance prediction},
	url = {http://dl.acm.org/citation.cfm?id=3107695},
	urldate = {2017-08-03},
	booktitle = {Proceedings of the 28th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering}},
	publisher = {IEEE Press},
	author = {Guo, Jianmei and Czarnecki, Krzysztof and Apely, Sven and Siegmundy, Norbert and Wasowski, Andrzej},
	year = {2013},
	pages = {301--311},
	file = {0123ab7ced1a81f4b65b5474fea0020dab5a.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/95KED8FU/0123ab7ced1a81f4b65b5474fea0020dab5a.pdf:application/pdf}
}

@article{heidelberger_computer_1984,
	title = {Computer performance evaluation methodology},
	url = {http://ieeexplore.ieee.org/abstract/document/1676394/},
	number = {12},
	urldate = {2017-08-03},
	journal = {IEEE Transactions on Computers},
	author = {Heidelberger, Philip and Lavenberg, Stephen S.},
	year = {1984},
	pages = {1195--1220},
	file = {01676394.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/63TQ23RU/01676394.pdf:application/pdf}
}

@inproceedings{siegmund_predicting_2012-1,
	title = {Predicting performance via automated feature-interaction detection},
	url = {http://ieeexplore.ieee.org/abstract/document/6227196/},
	urldate = {2017-08-03},
	booktitle = {Software {Engineering} ({ICSE}), 2012 34th {International} {Conference} on},
	publisher = {IEEE},
	author = {Siegmund, Norbert and Kolesnikov, Sergiy S. and Kästner, Christian and Apel, Sven and Batory, Don and Rosenmüller, Marko and Saake, Gunter},
	year = {2012},
	pages = {167--177},
	file = {icse12.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/Q6IUFGAN/icse12.pdf:application/pdf}
}

@inproceedings{sarkar_cost-efficient_2015,
	title = {Cost-efficient sampling for performance prediction of configurable systems (t)},
	url = {http://ieeexplore.ieee.org/abstract/document/7372023/},
	urldate = {2017-08-03},
	booktitle = {Automated {Software} {Engineering} ({ASE}), 2015 30th {IEEE}/{ACM} {International} {Conference} on},
	publisher = {IEEE},
	author = {Sarkar, Atri and Guo, Jianmei and Siegmund, Norbert and Apel, Sven and Czarnecki, Krzysztof},
	year = {2015},
	pages = {342--352},
	file = {PID3840471.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/BGFUSH6P/PID3840471.pdf:application/pdf}
}

@book{czarnecki_generative_2000,
	title = {Generative {Programming}: {Methods}, {Tools}, and {Applications}},
	isbn = {0-201-30977-7},
	publisher = {ACM Press/Addison-Wesley Publishing Co.},
	author = {Czarnecki, Krzysztof and Eisenecker, Ulrich W.},
	year = {2000}
}

@book{apel_feature-oriented_2013,
	address = {Berlin, Heidelberg},
	title = {Feature-{Oriented} {Software} {Product} {Lines}},
	isbn = {978-3-642-37520-0 978-3-642-37521-7},
	url = {http://link.springer.com/10.1007/978-3-642-37521-7},
	language = {en},
	urldate = {2017-08-03},
	publisher = {Springer Berlin Heidelberg},
	author = {Apel, Sven and Batory, Don and Kästner, Christian and Saake, Gunter},
	year = {2013},
	note = {DOI: 10.1007/978-3-642-37521-7},
	file = {ApelBatoryKaestnerSaake - Feature Oriented SPL.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/3NUUSWTW/ApelBatoryKaestnerSaake - Feature Oriented SPL.pdf:application/pdf}
}

@article{heidelberger_computer_1984-1,
	title = {Computer performance evaluation methodology},
	url = {http://ieeexplore.ieee.org/abstract/document/1676394/},
	number = {12},
	urldate = {2017-08-03},
	journal = {IEEE Transactions on Computers},
	author = {Heidelberger, Philip and Lavenberg, Stephen S.},
	year = {1984},
	pages = {1195--1220},
	file = {01676394.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/KHURPBKR/01676394.pdf:application/pdf}
}

@article{calder_feature_2003,
	title = {Feature interaction: a critical review and considered forecast},
	volume = {41},
	shorttitle = {Feature interaction},
	url = {http://www.sciencedirect.com/science/article/pii/S1389128602003523},
	number = {1},
	urldate = {2017-08-09},
	journal = {Computer Networks},
	author = {Calder, Muffy and Kolberg, Mario and Magill, Evan H. and Reiff-Marganiec, Stephan},
	year = {2003},
	pages = {115--141},
	file = {feature1calder.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/CU2BSBZN/feature1calder.pdf:application/pdf}
}

@inproceedings{medeiros_comparison_2016,
	title = {A comparison of 10 sampling algorithms for configurable systems},
	url = {http://dl.acm.org/citation.cfm?id=2884793},
	urldate = {2017-08-09},
	booktitle = {Proceedings of the 38th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Medeiros, Flávio and Kästner, Christian and Ribeiro, Márcio and Gheyi, Rohit and Apel, Sven},
	year = {2016},
	pages = {643--654},
	file = {sampling.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/AHCWCB2W/sampling.pdf:application/pdf}
}

@techreport{kang_feature-oriented_1990,
	title = {Feature-oriented domain analysis ({FODA}) feasibility study},
	url = {http://www.dtic.mil/docs/citations/ADA235785},
	urldate = {2017-08-13},
	institution = {Carnegie-Mellon Univ Pittsburgh Pa Software Engineering Inst},
	author = {Kang, Kyo C. and Cohen, Sholom G. and Hess, James A. and Novak, William E. and Peterson, A. Spencer},
	year = {1990},
	file = {ADA235785.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/9WBEKSVS/ADA235785.pdf:application/pdf}
}

@article{white_selecting_2009,
	title = {Selecting highly optimal architectural feature sets with filtered cartesian flattening},
	volume = {82},
	url = {http://www.sciencedirect.com/science/article/pii/S0164121209000284},
	number = {8},
	urldate = {2017-08-15},
	journal = {Journal of Systems and Software},
	author = {White, Jules and Dougherty, Brian and Schmidt, Douglas C.},
	year = {2009},
	pages = {1268--1284},
	file = {white-fmopt-journal.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/RHUZH5BA/white-fmopt-journal.pdf:application/pdf}
}

@article{schaefer_delta-oriented_2010,
	title = {Delta-oriented programming of software product lines},
	url = {http://link.springer.com/content/pdf/10.1007/978-3-642-15579-6.pdf#page=95},
	urldate = {2017-08-15},
	journal = {Software Product Lines: Going Beyond},
	author = {Schaefer, Ina and Bettini, Lorenzo and Bono, Viviana and Damiani, Ferruccio and Tanzarella, Nico},
	year = {2010},
	pages = {77--91},
	file = {main.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/WKUDTBKF/main.pdf:application/pdf}
}

@article{hunsen_preprocessor-based_2016,
	title = {Preprocessor-based variability in open-source and industrial software systems: {An} empirical study},
	volume = {21},
	shorttitle = {Preprocessor-based variability in open-source and industrial software systems},
	url = {http://link.springer.com/article/10.1007/s10664-015-9360-1},
	number = {2},
	urldate = {2017-08-15},
	journal = {Empirical Software Engineering},
	author = {Hunsen, Claus and Zhang, Bo and Siegmund, Janet and Kästner, Christian and Le{\textbackslash}s senich, Olaf and Becker, Martin and Apel, Sven},
	year = {2016},
	pages = {449--482},
	file = {Preprocessor-based variability in open-source and industrial soft.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/QCXIN94A/Preprocessor-based variability in open-source and industrial soft.pdf:application/pdf}
}

@book{shanmugam_statistics_2015,
	address = {Hoboken, New Jersey},
	title = {Statistics for scientists and engineers},
	isbn = {978-1-118-22896-8},
	publisher = {Wiley},
	author = {Shanmugam, Ramalingam and Chattamvelli, Rajan},
	year = {2015},
	keywords = {Mathematical statistics},
	file = {STATISTICS FOR SCIENTISTS AND ENGINEERS.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/IHP752AB/STATISTICS FOR SCIENTISTS AND ENGINEERS.pdf:application/pdf}
}

@inproceedings{schaefer_pure_2010,
	title = {Pure delta-oriented programming},
	url = {http://dl.acm.org/citation.cfm?id=1868696},
	urldate = {2017-08-18},
	booktitle = {Proceedings of the 2nd {International} {Workshop} on {Feature}-{Oriented} {Software} {Development}},
	publisher = {ACM},
	author = {Schaefer, Ina and Damiani, Ferruccio},
	year = {2010},
	pages = {49--56},
	file = {p49-schaefer.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/EQUGMFBU/p49-schaefer.pdf:application/pdf}
}

@article{smith_characterizing_1988,
	title = {Characterizing computer performance with a single number},
	volume = {31},
	url = {http://dl.acm.org/citation.cfm?id=63043},
	number = {10},
	urldate = {2017-08-21},
	journal = {Communications of the ACM},
	author = {Smith, James E.},
	year = {1988},
	pages = {1202--1206},
	file = {smith.pdf:/home/stefan/.zotero/zotero/ery54x3f.default/zotero/storage/WRZRKZPF/smith.pdf:application/pdf}
}